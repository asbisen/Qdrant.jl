# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""ReshardingInfo

    QdrantReshardingInfo(;
        direction=nothing,
        shard_id=nothing,
        peer_id=nothing,
        shard_key=nothing,
        comment=nothing,
    )

    - direction::QdrantReshardingDirection
    - shard_id::Int64
    - peer_id::Int64
    - shard_key::QdrantShardKey
    - comment::String : A human-readable report of the operation progress. Available only on the source peer.
"""
Base.@kwdef mutable struct QdrantReshardingInfo <: OpenAPI.APIModel
    direction = nothing # spec type: Union{ Nothing, QdrantReshardingDirection }
    shard_id::Union{Nothing, Int64} = nothing
    peer_id::Union{Nothing, Int64} = nothing
    shard_key = nothing # spec type: Union{ Nothing, QdrantShardKey }
    comment::Union{Nothing, String} = nothing

    function QdrantReshardingInfo(direction, shard_id, peer_id, shard_key, comment, )
        OpenAPI.validate_property(QdrantReshardingInfo, Symbol("direction"), direction)
        OpenAPI.validate_property(QdrantReshardingInfo, Symbol("shard_id"), shard_id)
        OpenAPI.validate_property(QdrantReshardingInfo, Symbol("peer_id"), peer_id)
        OpenAPI.validate_property(QdrantReshardingInfo, Symbol("shard_key"), shard_key)
        OpenAPI.validate_property(QdrantReshardingInfo, Symbol("comment"), comment)
        return new(direction, shard_id, peer_id, shard_key, comment, )
    end
end # type QdrantReshardingInfo

const _property_types_QdrantReshardingInfo = Dict{Symbol,String}(Symbol("direction")=>"QdrantReshardingDirection", Symbol("shard_id")=>"Int64", Symbol("peer_id")=>"Int64", Symbol("shard_key")=>"QdrantShardKey", Symbol("comment")=>"String", )
OpenAPI.property_type(::Type{ QdrantReshardingInfo }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_QdrantReshardingInfo[name]))}

function check_required(o::QdrantReshardingInfo)
    o.direction === nothing && (return false)
    o.shard_id === nothing && (return false)
    o.peer_id === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ QdrantReshardingInfo }, name::Symbol, val)
    if name === Symbol("shard_id")
        OpenAPI.validate_param(name, "QdrantReshardingInfo", :format, val, "uint32")
    end
    if name === Symbol("shard_id")
        OpenAPI.validate_param(name, "QdrantReshardingInfo", :minimum, val, 0, false)
    end
    if name === Symbol("peer_id")
        OpenAPI.validate_param(name, "QdrantReshardingInfo", :format, val, "uint64")
    end
    if name === Symbol("peer_id")
        OpenAPI.validate_param(name, "QdrantReshardingInfo", :minimum, val, 0, false)
    end
end
