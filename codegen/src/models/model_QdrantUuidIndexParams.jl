# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""UuidIndexParams

    QdrantUuidIndexParams(;
        type=nothing,
        is_tenant=nothing,
        on_disk=nothing,
    )

    - type::QdrantUuidIndexType
    - is_tenant::Bool : If true - used for tenant optimization.
    - on_disk::Bool : If true, store the index on disk. Default: false.
"""
Base.@kwdef mutable struct QdrantUuidIndexParams <: OpenAPI.APIModel
    type = nothing # spec type: Union{ Nothing, QdrantUuidIndexType }
    is_tenant::Union{Nothing, Bool} = nothing
    on_disk::Union{Nothing, Bool} = nothing

    function QdrantUuidIndexParams(type, is_tenant, on_disk, )
        OpenAPI.validate_property(QdrantUuidIndexParams, Symbol("type"), type)
        OpenAPI.validate_property(QdrantUuidIndexParams, Symbol("is_tenant"), is_tenant)
        OpenAPI.validate_property(QdrantUuidIndexParams, Symbol("on_disk"), on_disk)
        return new(type, is_tenant, on_disk, )
    end
end # type QdrantUuidIndexParams

const _property_types_QdrantUuidIndexParams = Dict{Symbol,String}(Symbol("type")=>"QdrantUuidIndexType", Symbol("is_tenant")=>"Bool", Symbol("on_disk")=>"Bool", )
OpenAPI.property_type(::Type{ QdrantUuidIndexParams }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_QdrantUuidIndexParams[name]))}

function check_required(o::QdrantUuidIndexParams)
    o.type === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ QdrantUuidIndexParams }, name::Symbol, val)
end
