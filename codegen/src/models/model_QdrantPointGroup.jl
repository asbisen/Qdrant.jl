# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""PointGroup

    QdrantPointGroup(;
        hits=nothing,
        id=nothing,
        lookup=nothing,
    )

    - hits::Vector{QdrantScoredPoint} : Scored points that have the same value of the group_by key
    - id::QdrantGroupId
    - lookup::QdrantRecord
"""
Base.@kwdef mutable struct QdrantPointGroup <: OpenAPI.APIModel
    hits::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{QdrantScoredPoint} }
    id = nothing # spec type: Union{ Nothing, QdrantGroupId }
    lookup = nothing # spec type: Union{ Nothing, QdrantRecord }

    function QdrantPointGroup(hits, id, lookup, )
        OpenAPI.validate_property(QdrantPointGroup, Symbol("hits"), hits)
        OpenAPI.validate_property(QdrantPointGroup, Symbol("id"), id)
        OpenAPI.validate_property(QdrantPointGroup, Symbol("lookup"), lookup)
        return new(hits, id, lookup, )
    end
end # type QdrantPointGroup

const _property_types_QdrantPointGroup = Dict{Symbol,String}(Symbol("hits")=>"Vector{QdrantScoredPoint}", Symbol("id")=>"QdrantGroupId", Symbol("lookup")=>"QdrantRecord", )
OpenAPI.property_type(::Type{ QdrantPointGroup }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_QdrantPointGroup[name]))}

function check_required(o::QdrantPointGroup)
    o.hits === nothing && (return false)
    o.id === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ QdrantPointGroup }, name::Symbol, val)
end
