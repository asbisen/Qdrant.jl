# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""PointsList

    QdrantPointsList(;
        points=nothing,
        shard_key=nothing,
    )

    - points::Vector{QdrantPointStruct}
    - shard_key::QdrantShardKeySelector
"""
Base.@kwdef mutable struct QdrantPointsList <: OpenAPI.APIModel
    points::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{QdrantPointStruct} }
    shard_key = nothing # spec type: Union{ Nothing, QdrantShardKeySelector }

    function QdrantPointsList(points, shard_key, )
        OpenAPI.validate_property(QdrantPointsList, Symbol("points"), points)
        OpenAPI.validate_property(QdrantPointsList, Symbol("shard_key"), shard_key)
        return new(points, shard_key, )
    end
end # type QdrantPointsList

const _property_types_QdrantPointsList = Dict{Symbol,String}(Symbol("points")=>"Vector{QdrantPointStruct}", Symbol("shard_key")=>"QdrantShardKeySelector", )
OpenAPI.property_type(::Type{ QdrantPointsList }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_QdrantPointsList[name]))}

function check_required(o::QdrantPointsList)
    o.points === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ QdrantPointsList }, name::Symbol, val)
end
