# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""VectorDataInfo

    QdrantVectorDataInfo(;
        num_vectors=nothing,
        num_indexed_vectors=nothing,
        num_deleted_vectors=nothing,
    )

    - num_vectors::Int64
    - num_indexed_vectors::Int64
    - num_deleted_vectors::Int64
"""
Base.@kwdef mutable struct QdrantVectorDataInfo <: OpenAPI.APIModel
    num_vectors::Union{Nothing, Int64} = nothing
    num_indexed_vectors::Union{Nothing, Int64} = nothing
    num_deleted_vectors::Union{Nothing, Int64} = nothing

    function QdrantVectorDataInfo(num_vectors, num_indexed_vectors, num_deleted_vectors, )
        OpenAPI.validate_property(QdrantVectorDataInfo, Symbol("num_vectors"), num_vectors)
        OpenAPI.validate_property(QdrantVectorDataInfo, Symbol("num_indexed_vectors"), num_indexed_vectors)
        OpenAPI.validate_property(QdrantVectorDataInfo, Symbol("num_deleted_vectors"), num_deleted_vectors)
        return new(num_vectors, num_indexed_vectors, num_deleted_vectors, )
    end
end # type QdrantVectorDataInfo

const _property_types_QdrantVectorDataInfo = Dict{Symbol,String}(Symbol("num_vectors")=>"Int64", Symbol("num_indexed_vectors")=>"Int64", Symbol("num_deleted_vectors")=>"Int64", )
OpenAPI.property_type(::Type{ QdrantVectorDataInfo }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_QdrantVectorDataInfo[name]))}

function check_required(o::QdrantVectorDataInfo)
    o.num_vectors === nothing && (return false)
    o.num_indexed_vectors === nothing && (return false)
    o.num_deleted_vectors === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ QdrantVectorDataInfo }, name::Symbol, val)
    if name === Symbol("num_vectors")
        OpenAPI.validate_param(name, "QdrantVectorDataInfo", :format, val, "uint")
    end
    if name === Symbol("num_vectors")
        OpenAPI.validate_param(name, "QdrantVectorDataInfo", :minimum, val, 0, false)
    end
    if name === Symbol("num_indexed_vectors")
        OpenAPI.validate_param(name, "QdrantVectorDataInfo", :format, val, "uint")
    end
    if name === Symbol("num_indexed_vectors")
        OpenAPI.validate_param(name, "QdrantVectorDataInfo", :minimum, val, 0, false)
    end
    if name === Symbol("num_deleted_vectors")
        OpenAPI.validate_param(name, "QdrantVectorDataInfo", :format, val, "uint")
    end
    if name === Symbol("num_deleted_vectors")
        OpenAPI.validate_param(name, "QdrantVectorDataInfo", :minimum, val, 0, false)
    end
end
