# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""GeoPoint
Geo point payload schema

    QdrantGeoPoint(;
        lon=nothing,
        lat=nothing,
    )

    - lon::Float64
    - lat::Float64
"""
Base.@kwdef mutable struct QdrantGeoPoint <: OpenAPI.APIModel
    lon::Union{Nothing, Float64} = nothing
    lat::Union{Nothing, Float64} = nothing

    function QdrantGeoPoint(lon, lat, )
        OpenAPI.validate_property(QdrantGeoPoint, Symbol("lon"), lon)
        OpenAPI.validate_property(QdrantGeoPoint, Symbol("lat"), lat)
        return new(lon, lat, )
    end
end # type QdrantGeoPoint

const _property_types_QdrantGeoPoint = Dict{Symbol,String}(Symbol("lon")=>"Float64", Symbol("lat")=>"Float64", )
OpenAPI.property_type(::Type{ QdrantGeoPoint }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_QdrantGeoPoint[name]))}

function check_required(o::QdrantGeoPoint)
    o.lon === nothing && (return false)
    o.lat === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ QdrantGeoPoint }, name::Symbol, val)
    if name === Symbol("lon")
        OpenAPI.validate_param(name, "QdrantGeoPoint", :format, val, "double")
    end
    if name === Symbol("lat")
        OpenAPI.validate_param(name, "QdrantGeoPoint", :format, val, "double")
    end
end
