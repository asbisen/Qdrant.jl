# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""ContextPair

    QdrantContextPair(;
        positive=nothing,
        negative=nothing,
    )

    - positive::QdrantVectorInput
    - negative::QdrantVectorInput
"""
Base.@kwdef mutable struct QdrantContextPair <: OpenAPI.APIModel
    positive = nothing # spec type: Union{ Nothing, QdrantVectorInput }
    negative = nothing # spec type: Union{ Nothing, QdrantVectorInput }

    function QdrantContextPair(positive, negative, )
        OpenAPI.validate_property(QdrantContextPair, Symbol("positive"), positive)
        OpenAPI.validate_property(QdrantContextPair, Symbol("negative"), negative)
        return new(positive, negative, )
    end
end # type QdrantContextPair

const _property_types_QdrantContextPair = Dict{Symbol,String}(Symbol("positive")=>"QdrantVectorInput", Symbol("negative")=>"QdrantVectorInput", )
OpenAPI.property_type(::Type{ QdrantContextPair }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_QdrantContextPair[name]))}

function check_required(o::QdrantContextPair)
    o.positive === nothing && (return false)
    o.negative === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ QdrantContextPair }, name::Symbol, val)
end
