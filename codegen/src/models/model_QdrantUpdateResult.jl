# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""UpdateResult

    QdrantUpdateResult(;
        operation_id=nothing,
        status=nothing,
    )

    - operation_id::Int64 : Sequential number of the operation
    - status::QdrantUpdateStatus
"""
Base.@kwdef mutable struct QdrantUpdateResult <: OpenAPI.APIModel
    operation_id::Union{Nothing, Int64} = nothing
    status = nothing # spec type: Union{ Nothing, QdrantUpdateStatus }

    function QdrantUpdateResult(operation_id, status, )
        OpenAPI.validate_property(QdrantUpdateResult, Symbol("operation_id"), operation_id)
        OpenAPI.validate_property(QdrantUpdateResult, Symbol("status"), status)
        return new(operation_id, status, )
    end
end # type QdrantUpdateResult

const _property_types_QdrantUpdateResult = Dict{Symbol,String}(Symbol("operation_id")=>"Int64", Symbol("status")=>"QdrantUpdateStatus", )
OpenAPI.property_type(::Type{ QdrantUpdateResult }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_QdrantUpdateResult[name]))}

function check_required(o::QdrantUpdateResult)
    o.status === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ QdrantUpdateResult }, name::Symbol, val)
    if name === Symbol("operation_id")
        OpenAPI.validate_param(name, "QdrantUpdateResult", :format, val, "uint64")
    end
    if name === Symbol("operation_id")
        OpenAPI.validate_param(name, "QdrantUpdateResult", :minimum, val, 0, false)
    end
end
