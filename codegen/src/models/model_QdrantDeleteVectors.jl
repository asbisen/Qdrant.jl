# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""DeleteVectors

    QdrantDeleteVectors(;
        points=nothing,
        filter=nothing,
        vector=nothing,
        shard_key=nothing,
    )

    - points::Vector{QdrantExtendedPointId} : Deletes values from each point in this list
    - filter::QdrantFilter
    - vector::Vector{String} : Vector names
    - shard_key::QdrantShardKeySelector
"""
Base.@kwdef mutable struct QdrantDeleteVectors <: OpenAPI.APIModel
    points::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{QdrantExtendedPointId} }
    filter = nothing # spec type: Union{ Nothing, QdrantFilter }
    vector::Union{Nothing, Vector{String}} = nothing
    shard_key = nothing # spec type: Union{ Nothing, QdrantShardKeySelector }

    function QdrantDeleteVectors(points, filter, vector, shard_key, )
        OpenAPI.validate_property(QdrantDeleteVectors, Symbol("points"), points)
        OpenAPI.validate_property(QdrantDeleteVectors, Symbol("filter"), filter)
        OpenAPI.validate_property(QdrantDeleteVectors, Symbol("vector"), vector)
        OpenAPI.validate_property(QdrantDeleteVectors, Symbol("shard_key"), shard_key)
        return new(points, filter, vector, shard_key, )
    end
end # type QdrantDeleteVectors

const _property_types_QdrantDeleteVectors = Dict{Symbol,String}(Symbol("points")=>"Vector{QdrantExtendedPointId}", Symbol("filter")=>"QdrantFilter", Symbol("vector")=>"Vector{String}", Symbol("shard_key")=>"QdrantShardKeySelector", )
OpenAPI.property_type(::Type{ QdrantDeleteVectors }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_QdrantDeleteVectors[name]))}

function check_required(o::QdrantDeleteVectors)
    o.vector === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ QdrantDeleteVectors }, name::Symbol, val)
    if name === Symbol("vector")
        OpenAPI.validate_param(name, "QdrantDeleteVectors", :minItems, val, 1)
        OpenAPI.validate_param(name, "QdrantDeleteVectors", :uniqueItems, val, true)
    end
end
