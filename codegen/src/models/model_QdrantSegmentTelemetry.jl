# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""SegmentTelemetry

    QdrantSegmentTelemetry(;
        info=nothing,
        config=nothing,
        vector_index_searches=nothing,
        payload_field_indices=nothing,
    )

    - info::QdrantSegmentInfo
    - config::QdrantSegmentConfig
    - vector_index_searches::Vector{QdrantVectorIndexSearchesTelemetry}
    - payload_field_indices::Vector{QdrantPayloadIndexTelemetry}
"""
Base.@kwdef mutable struct QdrantSegmentTelemetry <: OpenAPI.APIModel
    info = nothing # spec type: Union{ Nothing, QdrantSegmentInfo }
    config = nothing # spec type: Union{ Nothing, QdrantSegmentConfig }
    vector_index_searches::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{QdrantVectorIndexSearchesTelemetry} }
    payload_field_indices::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{QdrantPayloadIndexTelemetry} }

    function QdrantSegmentTelemetry(info, config, vector_index_searches, payload_field_indices, )
        OpenAPI.validate_property(QdrantSegmentTelemetry, Symbol("info"), info)
        OpenAPI.validate_property(QdrantSegmentTelemetry, Symbol("config"), config)
        OpenAPI.validate_property(QdrantSegmentTelemetry, Symbol("vector_index_searches"), vector_index_searches)
        OpenAPI.validate_property(QdrantSegmentTelemetry, Symbol("payload_field_indices"), payload_field_indices)
        return new(info, config, vector_index_searches, payload_field_indices, )
    end
end # type QdrantSegmentTelemetry

const _property_types_QdrantSegmentTelemetry = Dict{Symbol,String}(Symbol("info")=>"QdrantSegmentInfo", Symbol("config")=>"QdrantSegmentConfig", Symbol("vector_index_searches")=>"Vector{QdrantVectorIndexSearchesTelemetry}", Symbol("payload_field_indices")=>"Vector{QdrantPayloadIndexTelemetry}", )
OpenAPI.property_type(::Type{ QdrantSegmentTelemetry }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_QdrantSegmentTelemetry[name]))}

function check_required(o::QdrantSegmentTelemetry)
    o.info === nothing && (return false)
    o.config === nothing && (return false)
    o.vector_index_searches === nothing && (return false)
    o.payload_field_indices === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ QdrantSegmentTelemetry }, name::Symbol, val)
end
