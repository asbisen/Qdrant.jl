# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""RenameAlias
Change alias to a new one

    QdrantRenameAlias(;
        old_alias_name=nothing,
        new_alias_name=nothing,
    )

    - old_alias_name::String
    - new_alias_name::String
"""
Base.@kwdef mutable struct QdrantRenameAlias <: OpenAPI.APIModel
    old_alias_name::Union{Nothing, String} = nothing
    new_alias_name::Union{Nothing, String} = nothing

    function QdrantRenameAlias(old_alias_name, new_alias_name, )
        OpenAPI.validate_property(QdrantRenameAlias, Symbol("old_alias_name"), old_alias_name)
        OpenAPI.validate_property(QdrantRenameAlias, Symbol("new_alias_name"), new_alias_name)
        return new(old_alias_name, new_alias_name, )
    end
end # type QdrantRenameAlias

const _property_types_QdrantRenameAlias = Dict{Symbol,String}(Symbol("old_alias_name")=>"String", Symbol("new_alias_name")=>"String", )
OpenAPI.property_type(::Type{ QdrantRenameAlias }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_QdrantRenameAlias[name]))}

function check_required(o::QdrantRenameAlias)
    o.old_alias_name === nothing && (return false)
    o.new_alias_name === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ QdrantRenameAlias }, name::Symbol, val)
end
