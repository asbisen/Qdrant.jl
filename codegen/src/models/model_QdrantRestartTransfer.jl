# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""RestartTransfer

    QdrantRestartTransfer(;
        shard_id=nothing,
        from_peer_id=nothing,
        to_peer_id=nothing,
        method=nothing,
    )

    - shard_id::Int64
    - from_peer_id::Int64
    - to_peer_id::Int64
    - method::QdrantShardTransferMethod
"""
Base.@kwdef mutable struct QdrantRestartTransfer <: OpenAPI.APIModel
    shard_id::Union{Nothing, Int64} = nothing
    from_peer_id::Union{Nothing, Int64} = nothing
    to_peer_id::Union{Nothing, Int64} = nothing
    method = nothing # spec type: Union{ Nothing, QdrantShardTransferMethod }

    function QdrantRestartTransfer(shard_id, from_peer_id, to_peer_id, method, )
        OpenAPI.validate_property(QdrantRestartTransfer, Symbol("shard_id"), shard_id)
        OpenAPI.validate_property(QdrantRestartTransfer, Symbol("from_peer_id"), from_peer_id)
        OpenAPI.validate_property(QdrantRestartTransfer, Symbol("to_peer_id"), to_peer_id)
        OpenAPI.validate_property(QdrantRestartTransfer, Symbol("method"), method)
        return new(shard_id, from_peer_id, to_peer_id, method, )
    end
end # type QdrantRestartTransfer

const _property_types_QdrantRestartTransfer = Dict{Symbol,String}(Symbol("shard_id")=>"Int64", Symbol("from_peer_id")=>"Int64", Symbol("to_peer_id")=>"Int64", Symbol("method")=>"QdrantShardTransferMethod", )
OpenAPI.property_type(::Type{ QdrantRestartTransfer }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_QdrantRestartTransfer[name]))}

function check_required(o::QdrantRestartTransfer)
    o.shard_id === nothing && (return false)
    o.from_peer_id === nothing && (return false)
    o.to_peer_id === nothing && (return false)
    o.method === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ QdrantRestartTransfer }, name::Symbol, val)
    if name === Symbol("shard_id")
        OpenAPI.validate_param(name, "QdrantRestartTransfer", :format, val, "uint32")
    end
    if name === Symbol("shard_id")
        OpenAPI.validate_param(name, "QdrantRestartTransfer", :minimum, val, 0, false)
    end
    if name === Symbol("from_peer_id")
        OpenAPI.validate_param(name, "QdrantRestartTransfer", :format, val, "uint64")
    end
    if name === Symbol("from_peer_id")
        OpenAPI.validate_param(name, "QdrantRestartTransfer", :minimum, val, 0, false)
    end
    if name === Symbol("to_peer_id")
        OpenAPI.validate_param(name, "QdrantRestartTransfer", :format, val, "uint64")
    end
    if name === Symbol("to_peer_id")
        OpenAPI.validate_param(name, "QdrantRestartTransfer", :minimum, val, 0, false)
    end
end
