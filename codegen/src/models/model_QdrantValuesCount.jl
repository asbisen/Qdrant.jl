# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""ValuesCount
Values count filter request

    QdrantValuesCount(;
        lt=nothing,
        gt=nothing,
        gte=nothing,
        lte=nothing,
    )

    - lt::Int64 : point.key.length() &lt; values_count.lt
    - gt::Int64 : point.key.length() &gt; values_count.gt
    - gte::Int64 : point.key.length() &gt;&#x3D; values_count.gte
    - lte::Int64 : point.key.length() &lt;&#x3D; values_count.lte
"""
Base.@kwdef mutable struct QdrantValuesCount <: OpenAPI.APIModel
    lt::Union{Nothing, Int64} = nothing
    gt::Union{Nothing, Int64} = nothing
    gte::Union{Nothing, Int64} = nothing
    lte::Union{Nothing, Int64} = nothing

    function QdrantValuesCount(lt, gt, gte, lte, )
        OpenAPI.validate_property(QdrantValuesCount, Symbol("lt"), lt)
        OpenAPI.validate_property(QdrantValuesCount, Symbol("gt"), gt)
        OpenAPI.validate_property(QdrantValuesCount, Symbol("gte"), gte)
        OpenAPI.validate_property(QdrantValuesCount, Symbol("lte"), lte)
        return new(lt, gt, gte, lte, )
    end
end # type QdrantValuesCount

const _property_types_QdrantValuesCount = Dict{Symbol,String}(Symbol("lt")=>"Int64", Symbol("gt")=>"Int64", Symbol("gte")=>"Int64", Symbol("lte")=>"Int64", )
OpenAPI.property_type(::Type{ QdrantValuesCount }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_QdrantValuesCount[name]))}

function check_required(o::QdrantValuesCount)
    true
end

function OpenAPI.validate_property(::Type{ QdrantValuesCount }, name::Symbol, val)
    if name === Symbol("lt")
        OpenAPI.validate_param(name, "QdrantValuesCount", :format, val, "uint")
    end
    if name === Symbol("lt")
        OpenAPI.validate_param(name, "QdrantValuesCount", :minimum, val, 0, false)
    end
    if name === Symbol("gt")
        OpenAPI.validate_param(name, "QdrantValuesCount", :format, val, "uint")
    end
    if name === Symbol("gt")
        OpenAPI.validate_param(name, "QdrantValuesCount", :minimum, val, 0, false)
    end
    if name === Symbol("gte")
        OpenAPI.validate_param(name, "QdrantValuesCount", :format, val, "uint")
    end
    if name === Symbol("gte")
        OpenAPI.validate_param(name, "QdrantValuesCount", :minimum, val, 0, false)
    end
    if name === Symbol("lte")
        OpenAPI.validate_param(name, "QdrantValuesCount", :format, val, "uint")
    end
    if name === Symbol("lte")
        OpenAPI.validate_param(name, "QdrantValuesCount", :minimum, val, 0, false)
    end
end
