# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""SparseVector
Sparse vector structure

    QdrantSparseVector(;
        indices=nothing,
        values=nothing,
    )

    - indices::Vector{Int64} : Indices must be unique
    - values::Vector{Float32} : Values and indices must be the same length
"""
Base.@kwdef mutable struct QdrantSparseVector <: OpenAPI.APIModel
    indices::Union{Nothing, Vector{Int64}} = nothing
    values::Union{Nothing, Vector{Float32}} = nothing

    function QdrantSparseVector(indices, values, )
        OpenAPI.validate_property(QdrantSparseVector, Symbol("indices"), indices)
        OpenAPI.validate_property(QdrantSparseVector, Symbol("values"), values)
        return new(indices, values, )
    end
end # type QdrantSparseVector

const _property_types_QdrantSparseVector = Dict{Symbol,String}(Symbol("indices")=>"Vector{Int64}", Symbol("values")=>"Vector{Float32}", )
OpenAPI.property_type(::Type{ QdrantSparseVector }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_QdrantSparseVector[name]))}

function check_required(o::QdrantSparseVector)
    o.indices === nothing && (return false)
    o.values === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ QdrantSparseVector }, name::Symbol, val)
end
