# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""CollectionConfig

    QdrantCollectionConfig(;
        params=nothing,
        hnsw_config=nothing,
        optimizer_config=nothing,
        wal_config=nothing,
        quantization_config=nothing,
    )

    - params::QdrantCollectionParams
    - hnsw_config::QdrantHnswConfig
    - optimizer_config::QdrantOptimizersConfig
    - wal_config::QdrantWalConfig
    - quantization_config::QdrantQuantizationConfig
"""
Base.@kwdef mutable struct QdrantCollectionConfig <: OpenAPI.APIModel
    params = nothing # spec type: Union{ Nothing, QdrantCollectionParams }
    hnsw_config = nothing # spec type: Union{ Nothing, QdrantHnswConfig }
    optimizer_config = nothing # spec type: Union{ Nothing, QdrantOptimizersConfig }
    wal_config = nothing # spec type: Union{ Nothing, QdrantWalConfig }
    quantization_config = nothing # spec type: Union{ Nothing, QdrantQuantizationConfig }

    function QdrantCollectionConfig(params, hnsw_config, optimizer_config, wal_config, quantization_config, )
        OpenAPI.validate_property(QdrantCollectionConfig, Symbol("params"), params)
        OpenAPI.validate_property(QdrantCollectionConfig, Symbol("hnsw_config"), hnsw_config)
        OpenAPI.validate_property(QdrantCollectionConfig, Symbol("optimizer_config"), optimizer_config)
        OpenAPI.validate_property(QdrantCollectionConfig, Symbol("wal_config"), wal_config)
        OpenAPI.validate_property(QdrantCollectionConfig, Symbol("quantization_config"), quantization_config)
        return new(params, hnsw_config, optimizer_config, wal_config, quantization_config, )
    end
end # type QdrantCollectionConfig

const _property_types_QdrantCollectionConfig = Dict{Symbol,String}(Symbol("params")=>"QdrantCollectionParams", Symbol("hnsw_config")=>"QdrantHnswConfig", Symbol("optimizer_config")=>"QdrantOptimizersConfig", Symbol("wal_config")=>"QdrantWalConfig", Symbol("quantization_config")=>"QdrantQuantizationConfig", )
OpenAPI.property_type(::Type{ QdrantCollectionConfig }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_QdrantCollectionConfig[name]))}

function check_required(o::QdrantCollectionConfig)
    o.params === nothing && (return false)
    o.hnsw_config === nothing && (return false)
    o.optimizer_config === nothing && (return false)
    o.wal_config === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ QdrantCollectionConfig }, name::Symbol, val)
end
