# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""PointStruct

    QdrantPointStruct(;
        id=nothing,
        vector=nothing,
        payload=nothing,
    )

    - id::QdrantExtendedPointId
    - vector::QdrantVectorStruct
    - payload::Dict{String, Any}
"""
Base.@kwdef mutable struct QdrantPointStruct <: OpenAPI.APIModel
    id = nothing # spec type: Union{ Nothing, QdrantExtendedPointId }
    vector = nothing # spec type: Union{ Nothing, QdrantVectorStruct }
    payload::Union{Nothing, Dict{String, Any}} = nothing

    function QdrantPointStruct(id, vector, payload, )
        OpenAPI.validate_property(QdrantPointStruct, Symbol("id"), id)
        OpenAPI.validate_property(QdrantPointStruct, Symbol("vector"), vector)
        OpenAPI.validate_property(QdrantPointStruct, Symbol("payload"), payload)
        return new(id, vector, payload, )
    end
end # type QdrantPointStruct

const _property_types_QdrantPointStruct = Dict{Symbol,String}(Symbol("id")=>"QdrantExtendedPointId", Symbol("vector")=>"QdrantVectorStruct", Symbol("payload")=>"Dict{String, Any}", )
OpenAPI.property_type(::Type{ QdrantPointStruct }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_QdrantPointStruct[name]))}

function check_required(o::QdrantPointStruct)
    o.id === nothing && (return false)
    o.vector === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ QdrantPointStruct }, name::Symbol, val)
end
