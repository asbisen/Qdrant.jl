# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""PointIdsList

    QdrantPointIdsList(;
        points=nothing,
        shard_key=nothing,
    )

    - points::Vector{QdrantExtendedPointId}
    - shard_key::QdrantShardKeySelector
"""
Base.@kwdef mutable struct QdrantPointIdsList <: OpenAPI.APIModel
    points::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{QdrantExtendedPointId} }
    shard_key = nothing # spec type: Union{ Nothing, QdrantShardKeySelector }

    function QdrantPointIdsList(points, shard_key, )
        OpenAPI.validate_property(QdrantPointIdsList, Symbol("points"), points)
        OpenAPI.validate_property(QdrantPointIdsList, Symbol("shard_key"), shard_key)
        return new(points, shard_key, )
    end
end # type QdrantPointIdsList

const _property_types_QdrantPointIdsList = Dict{Symbol,String}(Symbol("points")=>"Vector{QdrantExtendedPointId}", Symbol("shard_key")=>"QdrantShardKeySelector", )
OpenAPI.property_type(::Type{ QdrantPointIdsList }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_QdrantPointIdsList[name]))}

function check_required(o::QdrantPointIdsList)
    o.points === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ QdrantPointIdsList }, name::Symbol, val)
end
