# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""FieldCondition
All possible payload filtering conditions

    QdrantFieldCondition(;
        key=nothing,
        match=nothing,
        range=nothing,
        geo_bounding_box=nothing,
        geo_radius=nothing,
        geo_polygon=nothing,
        values_count=nothing,
    )

    - key::String : Payload key
    - match::QdrantMatch
    - range::QdrantRangeInterface
    - geo_bounding_box::QdrantGeoBoundingBox
    - geo_radius::QdrantGeoRadius
    - geo_polygon::QdrantGeoPolygon
    - values_count::QdrantValuesCount
"""
Base.@kwdef mutable struct QdrantFieldCondition <: OpenAPI.APIModel
    key::Union{Nothing, String} = nothing
    match = nothing # spec type: Union{ Nothing, QdrantMatch }
    range = nothing # spec type: Union{ Nothing, QdrantRangeInterface }
    geo_bounding_box = nothing # spec type: Union{ Nothing, QdrantGeoBoundingBox }
    geo_radius = nothing # spec type: Union{ Nothing, QdrantGeoRadius }
    geo_polygon = nothing # spec type: Union{ Nothing, QdrantGeoPolygon }
    values_count = nothing # spec type: Union{ Nothing, QdrantValuesCount }

    function QdrantFieldCondition(key, match, range, geo_bounding_box, geo_radius, geo_polygon, values_count, )
        OpenAPI.validate_property(QdrantFieldCondition, Symbol("key"), key)
        OpenAPI.validate_property(QdrantFieldCondition, Symbol("match"), match)
        OpenAPI.validate_property(QdrantFieldCondition, Symbol("range"), range)
        OpenAPI.validate_property(QdrantFieldCondition, Symbol("geo_bounding_box"), geo_bounding_box)
        OpenAPI.validate_property(QdrantFieldCondition, Symbol("geo_radius"), geo_radius)
        OpenAPI.validate_property(QdrantFieldCondition, Symbol("geo_polygon"), geo_polygon)
        OpenAPI.validate_property(QdrantFieldCondition, Symbol("values_count"), values_count)
        return new(key, match, range, geo_bounding_box, geo_radius, geo_polygon, values_count, )
    end
end # type QdrantFieldCondition

const _property_types_QdrantFieldCondition = Dict{Symbol,String}(Symbol("key")=>"String", Symbol("match")=>"QdrantMatch", Symbol("range")=>"QdrantRangeInterface", Symbol("geo_bounding_box")=>"QdrantGeoBoundingBox", Symbol("geo_radius")=>"QdrantGeoRadius", Symbol("geo_polygon")=>"QdrantGeoPolygon", Symbol("values_count")=>"QdrantValuesCount", )
OpenAPI.property_type(::Type{ QdrantFieldCondition }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_QdrantFieldCondition[name]))}

function check_required(o::QdrantFieldCondition)
    o.key === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ QdrantFieldCondition }, name::Symbol, val)
end
