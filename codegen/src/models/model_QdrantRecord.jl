# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""Record
Point data

    QdrantRecord(;
        id=nothing,
        payload=nothing,
        vector=nothing,
        shard_key=nothing,
    )

    - id::QdrantExtendedPointId
    - payload::Dict{String, Any}
    - vector::QdrantVectorStruct
    - shard_key::QdrantShardKey
"""
Base.@kwdef mutable struct QdrantRecord <: OpenAPI.APIModel
    id = nothing # spec type: Union{ Nothing, QdrantExtendedPointId }
    payload::Union{Nothing, Dict{String, Any}} = nothing
    vector = nothing # spec type: Union{ Nothing, QdrantVectorStruct }
    shard_key = nothing # spec type: Union{ Nothing, QdrantShardKey }

    function QdrantRecord(id, payload, vector, shard_key, )
        OpenAPI.validate_property(QdrantRecord, Symbol("id"), id)
        OpenAPI.validate_property(QdrantRecord, Symbol("payload"), payload)
        OpenAPI.validate_property(QdrantRecord, Symbol("vector"), vector)
        OpenAPI.validate_property(QdrantRecord, Symbol("shard_key"), shard_key)
        return new(id, payload, vector, shard_key, )
    end
end # type QdrantRecord

const _property_types_QdrantRecord = Dict{Symbol,String}(Symbol("id")=>"QdrantExtendedPointId", Symbol("payload")=>"Dict{String, Any}", Symbol("vector")=>"QdrantVectorStruct", Symbol("shard_key")=>"QdrantShardKey", )
OpenAPI.property_type(::Type{ QdrantRecord }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_QdrantRecord[name]))}

function check_required(o::QdrantRecord)
    o.id === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ QdrantRecord }, name::Symbol, val)
end
