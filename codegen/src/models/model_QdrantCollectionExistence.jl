# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""CollectionExistence
State of existence of a collection, true &#x3D; exists, false &#x3D; does not exist

    QdrantCollectionExistence(;
        exists=nothing,
    )

    - exists::Bool
"""
Base.@kwdef mutable struct QdrantCollectionExistence <: OpenAPI.APIModel
    exists::Union{Nothing, Bool} = nothing

    function QdrantCollectionExistence(exists, )
        OpenAPI.validate_property(QdrantCollectionExistence, Symbol("exists"), exists)
        return new(exists, )
    end
end # type QdrantCollectionExistence

const _property_types_QdrantCollectionExistence = Dict{Symbol,String}(Symbol("exists")=>"Bool", )
OpenAPI.property_type(::Type{ QdrantCollectionExistence }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_QdrantCollectionExistence[name]))}

function check_required(o::QdrantCollectionExistence)
    o.exists === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ QdrantCollectionExistence }, name::Symbol, val)
end
