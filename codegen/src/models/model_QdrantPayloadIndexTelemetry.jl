# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""PayloadIndexTelemetry

    QdrantPayloadIndexTelemetry(;
        field_name=nothing,
        points_values_count=nothing,
        points_count=nothing,
        histogram_bucket_size=nothing,
    )

    - field_name::String
    - points_values_count::Int64
    - points_count::Int64
    - histogram_bucket_size::Int64
"""
Base.@kwdef mutable struct QdrantPayloadIndexTelemetry <: OpenAPI.APIModel
    field_name::Union{Nothing, String} = nothing
    points_values_count::Union{Nothing, Int64} = nothing
    points_count::Union{Nothing, Int64} = nothing
    histogram_bucket_size::Union{Nothing, Int64} = nothing

    function QdrantPayloadIndexTelemetry(field_name, points_values_count, points_count, histogram_bucket_size, )
        OpenAPI.validate_property(QdrantPayloadIndexTelemetry, Symbol("field_name"), field_name)
        OpenAPI.validate_property(QdrantPayloadIndexTelemetry, Symbol("points_values_count"), points_values_count)
        OpenAPI.validate_property(QdrantPayloadIndexTelemetry, Symbol("points_count"), points_count)
        OpenAPI.validate_property(QdrantPayloadIndexTelemetry, Symbol("histogram_bucket_size"), histogram_bucket_size)
        return new(field_name, points_values_count, points_count, histogram_bucket_size, )
    end
end # type QdrantPayloadIndexTelemetry

const _property_types_QdrantPayloadIndexTelemetry = Dict{Symbol,String}(Symbol("field_name")=>"String", Symbol("points_values_count")=>"Int64", Symbol("points_count")=>"Int64", Symbol("histogram_bucket_size")=>"Int64", )
OpenAPI.property_type(::Type{ QdrantPayloadIndexTelemetry }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_QdrantPayloadIndexTelemetry[name]))}

function check_required(o::QdrantPayloadIndexTelemetry)
    o.points_values_count === nothing && (return false)
    o.points_count === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ QdrantPayloadIndexTelemetry }, name::Symbol, val)
    if name === Symbol("points_values_count")
        OpenAPI.validate_param(name, "QdrantPayloadIndexTelemetry", :format, val, "uint")
    end
    if name === Symbol("points_values_count")
        OpenAPI.validate_param(name, "QdrantPayloadIndexTelemetry", :minimum, val, 0, false)
    end
    if name === Symbol("points_count")
        OpenAPI.validate_param(name, "QdrantPayloadIndexTelemetry", :format, val, "uint")
    end
    if name === Symbol("points_count")
        OpenAPI.validate_param(name, "QdrantPayloadIndexTelemetry", :minimum, val, 0, false)
    end
    if name === Symbol("histogram_bucket_size")
        OpenAPI.validate_param(name, "QdrantPayloadIndexTelemetry", :format, val, "uint")
    end
    if name === Symbol("histogram_bucket_size")
        OpenAPI.validate_param(name, "QdrantPayloadIndexTelemetry", :minimum, val, 0, false)
    end
end
