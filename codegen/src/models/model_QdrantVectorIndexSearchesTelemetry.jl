# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""VectorIndexSearchesTelemetry

    QdrantVectorIndexSearchesTelemetry(;
        index_name=nothing,
        unfiltered_plain=nothing,
        unfiltered_hnsw=nothing,
        unfiltered_sparse=nothing,
        filtered_plain=nothing,
        filtered_small_cardinality=nothing,
        filtered_large_cardinality=nothing,
        filtered_exact=nothing,
        filtered_sparse=nothing,
        unfiltered_exact=nothing,
    )

    - index_name::String
    - unfiltered_plain::QdrantOperationDurationStatistics
    - unfiltered_hnsw::QdrantOperationDurationStatistics
    - unfiltered_sparse::QdrantOperationDurationStatistics
    - filtered_plain::QdrantOperationDurationStatistics
    - filtered_small_cardinality::QdrantOperationDurationStatistics
    - filtered_large_cardinality::QdrantOperationDurationStatistics
    - filtered_exact::QdrantOperationDurationStatistics
    - filtered_sparse::QdrantOperationDurationStatistics
    - unfiltered_exact::QdrantOperationDurationStatistics
"""
Base.@kwdef mutable struct QdrantVectorIndexSearchesTelemetry <: OpenAPI.APIModel
    index_name::Union{Nothing, String} = nothing
    unfiltered_plain = nothing # spec type: Union{ Nothing, QdrantOperationDurationStatistics }
    unfiltered_hnsw = nothing # spec type: Union{ Nothing, QdrantOperationDurationStatistics }
    unfiltered_sparse = nothing # spec type: Union{ Nothing, QdrantOperationDurationStatistics }
    filtered_plain = nothing # spec type: Union{ Nothing, QdrantOperationDurationStatistics }
    filtered_small_cardinality = nothing # spec type: Union{ Nothing, QdrantOperationDurationStatistics }
    filtered_large_cardinality = nothing # spec type: Union{ Nothing, QdrantOperationDurationStatistics }
    filtered_exact = nothing # spec type: Union{ Nothing, QdrantOperationDurationStatistics }
    filtered_sparse = nothing # spec type: Union{ Nothing, QdrantOperationDurationStatistics }
    unfiltered_exact = nothing # spec type: Union{ Nothing, QdrantOperationDurationStatistics }

    function QdrantVectorIndexSearchesTelemetry(index_name, unfiltered_plain, unfiltered_hnsw, unfiltered_sparse, filtered_plain, filtered_small_cardinality, filtered_large_cardinality, filtered_exact, filtered_sparse, unfiltered_exact, )
        OpenAPI.validate_property(QdrantVectorIndexSearchesTelemetry, Symbol("index_name"), index_name)
        OpenAPI.validate_property(QdrantVectorIndexSearchesTelemetry, Symbol("unfiltered_plain"), unfiltered_plain)
        OpenAPI.validate_property(QdrantVectorIndexSearchesTelemetry, Symbol("unfiltered_hnsw"), unfiltered_hnsw)
        OpenAPI.validate_property(QdrantVectorIndexSearchesTelemetry, Symbol("unfiltered_sparse"), unfiltered_sparse)
        OpenAPI.validate_property(QdrantVectorIndexSearchesTelemetry, Symbol("filtered_plain"), filtered_plain)
        OpenAPI.validate_property(QdrantVectorIndexSearchesTelemetry, Symbol("filtered_small_cardinality"), filtered_small_cardinality)
        OpenAPI.validate_property(QdrantVectorIndexSearchesTelemetry, Symbol("filtered_large_cardinality"), filtered_large_cardinality)
        OpenAPI.validate_property(QdrantVectorIndexSearchesTelemetry, Symbol("filtered_exact"), filtered_exact)
        OpenAPI.validate_property(QdrantVectorIndexSearchesTelemetry, Symbol("filtered_sparse"), filtered_sparse)
        OpenAPI.validate_property(QdrantVectorIndexSearchesTelemetry, Symbol("unfiltered_exact"), unfiltered_exact)
        return new(index_name, unfiltered_plain, unfiltered_hnsw, unfiltered_sparse, filtered_plain, filtered_small_cardinality, filtered_large_cardinality, filtered_exact, filtered_sparse, unfiltered_exact, )
    end
end # type QdrantVectorIndexSearchesTelemetry

const _property_types_QdrantVectorIndexSearchesTelemetry = Dict{Symbol,String}(Symbol("index_name")=>"String", Symbol("unfiltered_plain")=>"QdrantOperationDurationStatistics", Symbol("unfiltered_hnsw")=>"QdrantOperationDurationStatistics", Symbol("unfiltered_sparse")=>"QdrantOperationDurationStatistics", Symbol("filtered_plain")=>"QdrantOperationDurationStatistics", Symbol("filtered_small_cardinality")=>"QdrantOperationDurationStatistics", Symbol("filtered_large_cardinality")=>"QdrantOperationDurationStatistics", Symbol("filtered_exact")=>"QdrantOperationDurationStatistics", Symbol("filtered_sparse")=>"QdrantOperationDurationStatistics", Symbol("unfiltered_exact")=>"QdrantOperationDurationStatistics", )
OpenAPI.property_type(::Type{ QdrantVectorIndexSearchesTelemetry }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_QdrantVectorIndexSearchesTelemetry[name]))}

function check_required(o::QdrantVectorIndexSearchesTelemetry)
    o.unfiltered_plain === nothing && (return false)
    o.unfiltered_hnsw === nothing && (return false)
    o.unfiltered_sparse === nothing && (return false)
    o.filtered_plain === nothing && (return false)
    o.filtered_small_cardinality === nothing && (return false)
    o.filtered_large_cardinality === nothing && (return false)
    o.filtered_exact === nothing && (return false)
    o.filtered_sparse === nothing && (return false)
    o.unfiltered_exact === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ QdrantVectorIndexSearchesTelemetry }, name::Symbol, val)
end
