# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""TelemetryData

    QdrantTelemetryData(;
        id=nothing,
        app=nothing,
        collections=nothing,
        cluster=nothing,
        requests=nothing,
    )

    - id::String
    - app::QdrantAppBuildTelemetry
    - collections::QdrantCollectionsTelemetry
    - cluster::QdrantClusterTelemetry
    - requests::QdrantRequestsTelemetry
"""
Base.@kwdef mutable struct QdrantTelemetryData <: OpenAPI.APIModel
    id::Union{Nothing, String} = nothing
    app = nothing # spec type: Union{ Nothing, QdrantAppBuildTelemetry }
    collections = nothing # spec type: Union{ Nothing, QdrantCollectionsTelemetry }
    cluster = nothing # spec type: Union{ Nothing, QdrantClusterTelemetry }
    requests = nothing # spec type: Union{ Nothing, QdrantRequestsTelemetry }

    function QdrantTelemetryData(id, app, collections, cluster, requests, )
        OpenAPI.validate_property(QdrantTelemetryData, Symbol("id"), id)
        OpenAPI.validate_property(QdrantTelemetryData, Symbol("app"), app)
        OpenAPI.validate_property(QdrantTelemetryData, Symbol("collections"), collections)
        OpenAPI.validate_property(QdrantTelemetryData, Symbol("cluster"), cluster)
        OpenAPI.validate_property(QdrantTelemetryData, Symbol("requests"), requests)
        return new(id, app, collections, cluster, requests, )
    end
end # type QdrantTelemetryData

const _property_types_QdrantTelemetryData = Dict{Symbol,String}(Symbol("id")=>"String", Symbol("app")=>"QdrantAppBuildTelemetry", Symbol("collections")=>"QdrantCollectionsTelemetry", Symbol("cluster")=>"QdrantClusterTelemetry", Symbol("requests")=>"QdrantRequestsTelemetry", )
OpenAPI.property_type(::Type{ QdrantTelemetryData }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_QdrantTelemetryData[name]))}

function check_required(o::QdrantTelemetryData)
    o.id === nothing && (return false)
    o.app === nothing && (return false)
    o.collections === nothing && (return false)
    o.cluster === nothing && (return false)
    o.requests === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ QdrantTelemetryData }, name::Symbol, val)
end
