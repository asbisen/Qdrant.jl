# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""GeoBoundingBox
Geo filter request  Matches coordinates inside the rectangle, described by coordinates of lop-left and bottom-right edges

    QdrantGeoBoundingBox(;
        top_left=nothing,
        bottom_right=nothing,
    )

    - top_left::QdrantGeoPoint
    - bottom_right::QdrantGeoPoint
"""
Base.@kwdef mutable struct QdrantGeoBoundingBox <: OpenAPI.APIModel
    top_left = nothing # spec type: Union{ Nothing, QdrantGeoPoint }
    bottom_right = nothing # spec type: Union{ Nothing, QdrantGeoPoint }

    function QdrantGeoBoundingBox(top_left, bottom_right, )
        OpenAPI.validate_property(QdrantGeoBoundingBox, Symbol("top_left"), top_left)
        OpenAPI.validate_property(QdrantGeoBoundingBox, Symbol("bottom_right"), bottom_right)
        return new(top_left, bottom_right, )
    end
end # type QdrantGeoBoundingBox

const _property_types_QdrantGeoBoundingBox = Dict{Symbol,String}(Symbol("top_left")=>"QdrantGeoPoint", Symbol("bottom_right")=>"QdrantGeoPoint", )
OpenAPI.property_type(::Type{ QdrantGeoBoundingBox }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_QdrantGeoBoundingBox[name]))}

function check_required(o::QdrantGeoBoundingBox)
    o.top_left === nothing && (return false)
    o.bottom_right === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ QdrantGeoBoundingBox }, name::Symbol, val)
end
