# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""TrackerTelemetry
Tracker object used in telemetry

    QdrantTrackerTelemetry(;
        name=nothing,
        segment_ids=nothing,
        status=nothing,
        start_at=nothing,
        end_at=nothing,
    )

    - name::String : Name of the optimizer
    - segment_ids::Vector{Int64} : Segment IDs being optimized
    - status::QdrantTrackerStatus
    - start_at::ZonedDateTime : Start time of the optimizer
    - end_at::ZonedDateTime : End time of the optimizer
"""
Base.@kwdef mutable struct QdrantTrackerTelemetry <: OpenAPI.APIModel
    name::Union{Nothing, String} = nothing
    segment_ids::Union{Nothing, Vector{Int64}} = nothing
    status = nothing # spec type: Union{ Nothing, QdrantTrackerStatus }
    start_at::Union{Nothing, ZonedDateTime} = nothing
    end_at::Union{Nothing, ZonedDateTime} = nothing

    function QdrantTrackerTelemetry(name, segment_ids, status, start_at, end_at, )
        OpenAPI.validate_property(QdrantTrackerTelemetry, Symbol("name"), name)
        OpenAPI.validate_property(QdrantTrackerTelemetry, Symbol("segment_ids"), segment_ids)
        OpenAPI.validate_property(QdrantTrackerTelemetry, Symbol("status"), status)
        OpenAPI.validate_property(QdrantTrackerTelemetry, Symbol("start_at"), start_at)
        OpenAPI.validate_property(QdrantTrackerTelemetry, Symbol("end_at"), end_at)
        return new(name, segment_ids, status, start_at, end_at, )
    end
end # type QdrantTrackerTelemetry

const _property_types_QdrantTrackerTelemetry = Dict{Symbol,String}(Symbol("name")=>"String", Symbol("segment_ids")=>"Vector{Int64}", Symbol("status")=>"QdrantTrackerStatus", Symbol("start_at")=>"ZonedDateTime", Symbol("end_at")=>"ZonedDateTime", )
OpenAPI.property_type(::Type{ QdrantTrackerTelemetry }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_QdrantTrackerTelemetry[name]))}

function check_required(o::QdrantTrackerTelemetry)
    o.name === nothing && (return false)
    o.segment_ids === nothing && (return false)
    o.status === nothing && (return false)
    o.start_at === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ QdrantTrackerTelemetry }, name::Symbol, val)
    if name === Symbol("start_at")
        OpenAPI.validate_param(name, "QdrantTrackerTelemetry", :format, val, "date-time")
    end
    if name === Symbol("end_at")
        OpenAPI.validate_param(name, "QdrantTrackerTelemetry", :format, val, "date-time")
    end
end
