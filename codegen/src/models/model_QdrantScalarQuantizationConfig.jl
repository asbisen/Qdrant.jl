# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""ScalarQuantizationConfig

    QdrantScalarQuantizationConfig(;
        type=nothing,
        quantile=nothing,
        always_ram=nothing,
    )

    - type::QdrantScalarType
    - quantile::Float32 : Quantile for quantization. Expected value range in [0.5, 1.0]. If not set - use the whole range of values
    - always_ram::Bool : If true - quantized vectors always will be stored in RAM, ignoring the config of main storage
"""
Base.@kwdef mutable struct QdrantScalarQuantizationConfig <: OpenAPI.APIModel
    type = nothing # spec type: Union{ Nothing, QdrantScalarType }
    quantile::Union{Nothing, Float32} = nothing
    always_ram::Union{Nothing, Bool} = nothing

    function QdrantScalarQuantizationConfig(type, quantile, always_ram, )
        OpenAPI.validate_property(QdrantScalarQuantizationConfig, Symbol("type"), type)
        OpenAPI.validate_property(QdrantScalarQuantizationConfig, Symbol("quantile"), quantile)
        OpenAPI.validate_property(QdrantScalarQuantizationConfig, Symbol("always_ram"), always_ram)
        return new(type, quantile, always_ram, )
    end
end # type QdrantScalarQuantizationConfig

const _property_types_QdrantScalarQuantizationConfig = Dict{Symbol,String}(Symbol("type")=>"QdrantScalarType", Symbol("quantile")=>"Float32", Symbol("always_ram")=>"Bool", )
OpenAPI.property_type(::Type{ QdrantScalarQuantizationConfig }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_QdrantScalarQuantizationConfig[name]))}

function check_required(o::QdrantScalarQuantizationConfig)
    o.type === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ QdrantScalarQuantizationConfig }, name::Symbol, val)
    if name === Symbol("quantile")
        OpenAPI.validate_param(name, "QdrantScalarQuantizationConfig", :format, val, "float")
    end
    if name === Symbol("quantile")
        OpenAPI.validate_param(name, "QdrantScalarQuantizationConfig", :maximum, val, 1, false)
        OpenAPI.validate_param(name, "QdrantScalarQuantizationConfig", :minimum, val, 0.5, false)
    end
end
