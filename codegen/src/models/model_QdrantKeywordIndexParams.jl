# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""KeywordIndexParams

    QdrantKeywordIndexParams(;
        type=nothing,
        is_tenant=nothing,
        on_disk=nothing,
    )

    - type::QdrantKeywordIndexType
    - is_tenant::Bool : If true - used for tenant optimization. Default: false.
    - on_disk::Bool : If true, store the index on disk. Default: false.
"""
Base.@kwdef mutable struct QdrantKeywordIndexParams <: OpenAPI.APIModel
    type = nothing # spec type: Union{ Nothing, QdrantKeywordIndexType }
    is_tenant::Union{Nothing, Bool} = nothing
    on_disk::Union{Nothing, Bool} = nothing

    function QdrantKeywordIndexParams(type, is_tenant, on_disk, )
        OpenAPI.validate_property(QdrantKeywordIndexParams, Symbol("type"), type)
        OpenAPI.validate_property(QdrantKeywordIndexParams, Symbol("is_tenant"), is_tenant)
        OpenAPI.validate_property(QdrantKeywordIndexParams, Symbol("on_disk"), on_disk)
        return new(type, is_tenant, on_disk, )
    end
end # type QdrantKeywordIndexParams

const _property_types_QdrantKeywordIndexParams = Dict{Symbol,String}(Symbol("type")=>"QdrantKeywordIndexType", Symbol("is_tenant")=>"Bool", Symbol("on_disk")=>"Bool", )
OpenAPI.property_type(::Type{ QdrantKeywordIndexParams }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_QdrantKeywordIndexParams[name]))}

function check_required(o::QdrantKeywordIndexParams)
    o.type === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ QdrantKeywordIndexParams }, name::Symbol, val)
end
