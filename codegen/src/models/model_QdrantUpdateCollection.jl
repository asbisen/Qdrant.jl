# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""UpdateCollection
Operation for updating parameters of the existing collection

    QdrantUpdateCollection(;
        vectors=nothing,
        optimizers_config=nothing,
        params=nothing,
        hnsw_config=nothing,
        quantization_config=nothing,
        sparse_vectors=nothing,
    )

    - vectors::Dict{String, QdrantVectorParamsDiff} : Vector update params for multiple vectors  { \&quot;vector_name\&quot;: { \&quot;hnsw_config\&quot;: { \&quot;m\&quot;: 8 } } }
    - optimizers_config::QdrantOptimizersConfigDiff
    - params::QdrantCollectionParamsDiff
    - hnsw_config::QdrantHnswConfigDiff
    - quantization_config::QdrantQuantizationConfigDiff
    - sparse_vectors::Dict{String, QdrantSparseVectorParams}
"""
Base.@kwdef mutable struct QdrantUpdateCollection <: OpenAPI.APIModel
    vectors::Union{Nothing, Dict} = nothing # spec type: Union{ Nothing, Dict{String, QdrantVectorParamsDiff} }
    optimizers_config = nothing # spec type: Union{ Nothing, QdrantOptimizersConfigDiff }
    params = nothing # spec type: Union{ Nothing, QdrantCollectionParamsDiff }
    hnsw_config = nothing # spec type: Union{ Nothing, QdrantHnswConfigDiff }
    quantization_config = nothing # spec type: Union{ Nothing, QdrantQuantizationConfigDiff }
    sparse_vectors::Union{Nothing, Dict} = nothing # spec type: Union{ Nothing, Dict{String, QdrantSparseVectorParams} }

    function QdrantUpdateCollection(vectors, optimizers_config, params, hnsw_config, quantization_config, sparse_vectors, )
        OpenAPI.validate_property(QdrantUpdateCollection, Symbol("vectors"), vectors)
        OpenAPI.validate_property(QdrantUpdateCollection, Symbol("optimizers_config"), optimizers_config)
        OpenAPI.validate_property(QdrantUpdateCollection, Symbol("params"), params)
        OpenAPI.validate_property(QdrantUpdateCollection, Symbol("hnsw_config"), hnsw_config)
        OpenAPI.validate_property(QdrantUpdateCollection, Symbol("quantization_config"), quantization_config)
        OpenAPI.validate_property(QdrantUpdateCollection, Symbol("sparse_vectors"), sparse_vectors)
        return new(vectors, optimizers_config, params, hnsw_config, quantization_config, sparse_vectors, )
    end
end # type QdrantUpdateCollection

const _property_types_QdrantUpdateCollection = Dict{Symbol,String}(Symbol("vectors")=>"Dict{String, QdrantVectorParamsDiff}", Symbol("optimizers_config")=>"QdrantOptimizersConfigDiff", Symbol("params")=>"QdrantCollectionParamsDiff", Symbol("hnsw_config")=>"QdrantHnswConfigDiff", Symbol("quantization_config")=>"QdrantQuantizationConfigDiff", Symbol("sparse_vectors")=>"Dict{String, QdrantSparseVectorParams}", )
OpenAPI.property_type(::Type{ QdrantUpdateCollection }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_QdrantUpdateCollection[name]))}

function check_required(o::QdrantUpdateCollection)
    true
end

function OpenAPI.validate_property(::Type{ QdrantUpdateCollection }, name::Symbol, val)
end
